# All the build steps for the application.
# 1. Build app and Dockerfile
# 2. Make image available to ACR.

name: 'Build and Push to ACR'
on:
  workflow_dispatch:
    inputs:
      imageName:
        description: 'The name of the application container image'
        required: true
        default: 'apex-demo'
        type: string
      appPath:
        description: 'The path from where the build takes place'
        required: true
        default: '.'
        type: string
      customTag:
        description: 'The custom tag of the image'
        required: true
        default: 'latest'
              
permissions:
  id-token: write
  contents: read

# These could be configured as repo variables.
env:
    CLIENT_ID: 'c8450ed2-ef86-4006-846c-12aea5ac50e1'
    TENANT_ID: 'ab4e459b-86aa-4f62-a4f2-f6105fe5993e'
    SUBSCRIPTION_ID: '1e1a8154-8d30-462e-97d7-3970855045f4'
    REGISTRY_FQDN: 'apxdemo-hfcmfdf9eycbf0a4.azurecr.io'
    IMAGE: ${{ inputs.imageName }}
    TAG: ${{ inputs.customTag }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: demo
    steps:

      - name: Default Checkout
        uses: actions/checkout@v3

      - name: Log in to ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_FQDN }}
          username: ${{ env.CLIENT_ID }}
          password: ${{ secrets.ACR_IDENTITY_SECRET }}
      
      - name: Build image
        run: |
          docker build -t ${{ env.REGISTRY_FQDN }}/${{ inputs.imageName }}:${{ env.TAG }} ${{ inputs.appPath }}

      - name: Push to ACR
        run: |
          docker push ${{ env.REGISTRY_FQDN }}/${{ inputs.imageName }}:${{ env.TAG }}